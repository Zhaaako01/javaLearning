Какие типы операторов существуют в Java:

1) Арифметические(arithmetic)
2) Присваивания(assigment)
3) Сравнения(relational)
4) Логические(logical)

Каждый из этих типов содержат внутри свои операторы.

 *** Арифметические операты:
1) +        5) %
2) -        6) ++
3) *        7) --
4) /

* Арифметический оператор % - показывает остаток от деления.

* Арифметические операторы -- и ++ - так же называеются Unary операторами.
++ означает что к какому-то значению переменной мы плюсуем +1 соотвественно,
-- означает что к какому-то значению переменной мы отнимаем -1

Например:
a = 5;                                   | a = 5;
a++ означает a(5) + 1, значит a = 6;     | a-- означает a(5) - 1, значит a = 4;
a++ здесь а это prefix, ++ это postfix   | a-- здесь а это prefix, -- это postfix

 *** Операторы присваивания:
 1) = Присваение(НЕ РАВНО, А ПРИСВАЕНИЕ)
 2) += это выражение(оператор) говорит сначала прибавь потом присвой. Например:
 int a = 5;
 a = a + 3;
 а = 8;
 Весь этот пример можно корокто написать a+=3; Это тоже самое что a = a + 3;
 3) -= это выражение(оператор) говорит сначала убавь потом присвой.
 4) *= это выражение(оператор) говорит сначала умножь потом присвой.
 5) /= это выражение(оператор) говорит сначала вычти потом присвой.


 *** Операторы сравнения:
1) >   - больше
2) >=  - больше или равно
3) <   - меньше
4) <=  - меньше или равно
5) ==  - равно
6) !=  - не равно

*** Логические операторы(Нельзя использовать с числами): Логические операторы рабо-
тают с типом данных boolean
1) && - оператор И(AND) - все критерии объединенные с И(&&) должны удовлетворяться
2) || - оператор ИЛИ(OR) - хотя бы один из критериев должен удовлетворяться

Например: Есть 3 переменные b1, b2, b3 и когда их значения(выражения) будет true ли-
бо false то какой будет результат всего выражения
     b1          b2          b3        result(всего выражения)
    true   &&   true   &&   true    =   true
    true   &&   true   &&   false   =   false
    false  &&   false  &&   false   =   false
    true   ||   true   ||   true    =   true
    true   ||   false  ||   false   =   true
    false  ||   false  ||   false   =   false
    false  ||   false  ||   true    =   true

Операторы && и || - они называются short circuit операторами, это означает что не всегда
все операнды оператора && и || выполняются(Test5). Например:
boolean a = false;
boolean b = true;
boolean c = a && b; java видит что операнда a = false и java уже не будет выполнять и проверять b;
boolean d = b || a; java видит что операнда b = true и java уже не будет выполнять и проверять a;

3) ! - оператор ОТРИЦАНИЯ принимает противоположенное значения
Например:
!true = false;               !false = true;

4) & - оператор (be twice AND)
5) | - оператор (be twice OR)
 *** Когда мы используем be twice операторы(& и |) выполняются все части & или | вне зависимости от того
повлияет ли это на дальнейший результат.

Например: Есть 3 переменные b1, b2, b3 и когда их значения(выражения) будет true ли-
бо false то какой будет результат всего выражения
     b1          b2          b3        result(всего выражения)
    true    &   true    &   true    =   true
    true    &   true    &   false   =   false
    false   &   false   &   false   =   false
    true    |   true    |   true    =   true
    true    |   false   |   false   =   true
    false   |   false   |   false   =   false
    false   |   false   |   true    =   true

 *** BE TWICE логические операторы(&, |) могут работать с числами(Test6). Мы не можем использовать обычные
логические операторы Or и And (||, &&) с числами.
Например:
 a = 10;        a & b;
 b = 5;         10 & 5;
 10 исчисление(decimal) -- 10 & 5                           0 - false
 2 исчисление(binary)   -- 1010 & 0101                      1 - true
                        1010 & 0101 = 0000 = 0(decimal);
                        1010 | 0101 = 1111 = 15(decimal);
6) ^ - оператор BE TWICE EXCLUSIVE OR (XOR - эксклюзивный или) - он возвращает true тогда и только тогда,
когда только одна операнда всего выражения true.(Test7)

Последовательность и приоритетов обработки этих операторов если они в одном выражение:(Test8)
    Приоритет |        Оператор
        1     |    ++  --  !
        2     |    *  /  %
        3     |    +  -
        4     |    <  <=  >  >=
        5     |    ==  !=
        6     |    &&  ||
        7     |    =  +=  -=  *=  /=  %=













